<!DOCTYPE html>
<html lang="en">

<head>
  <script type="module" src="https://cdn.jsdelivr.net/npm/@shoelace-style/shoelace@2.0.0-beta.83/dist/shoelace.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@shoelace-style/shoelace@2.0.0-beta.83/dist/themes/light.css">
  <!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/docx/8.3.0/docx.umd.js"></script> -->

  <%- include('partials/head') %>
  <style>
    .section-card {
      background: white;
      border-radius: 1rem;
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
      border: 1px solid rgba(0, 0, 0, 0.05);
      transition: all 0.2s ease;
    }

    .section-card:hover {
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
      transform: translateY(-1px);
    }
  </style>
</head>

<body class="min-h-screen bg-gray-50/50">
  <%- include('partials/nav') %>
  <div class="container mx-auto px-4 py-12">
    <div class="flex flex-col lg:flex-row gap-8">
      <!-- Sidebar with User Profile -->
      <div class="lg:w-1/4 relative">
        <div class="section-card p-8 sticky top-8">
          <!-- Profile Header -->
          <div class="text-center mb-8">
            <button class="absolute top-0 right-0 p-2 rounded-lg hover:bg-gray-50 text-gray-400 hover:text-indigo-600 group transition-all">
              <svg class="h-5 w-5" fill="none" stroke="currentColor" viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                <path d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z" stroke-linecap="round" stroke-linejoin="round" stroke-width="2">
                </path>
              </svg>
              <span class="absolute right-full mr-2 bg-gray-900 text-white text-xs px-2 py-1 rounded opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all whitespace-nowrap">
                Edit Profile
              </span>
            </button>
            <div class="w-24 h-24 rounded-full bg-gradient-to-br from-indigo-600 to-purple-600 mx-auto mb-4 flex items-center justify-center">
              <img src="https://loremflickr.com/200/200?random=2" alt="JD" class="w-100 object-contain rounded-full text-2xl font-bold text-white text-3xl font-bold text-white">
            </div>
            <h3 class="text-xl font-semibold text-gray-900 mb-1">
              <%= `${user.first_name} ${user.last_name}` %>
            </h3>
            <p class="text-gray-500">
              Software Engineer
            </p>
          </div>
          <!-- Profile Completion -->
          <div class="mb-8">
            <div class="flex justify-between text-sm mb-2">
              <span class="text-gray-600 font-medium">
                Profile Completion
              </span>
              <span class="text-indigo-600 font-semibold">
                85%
              </span>
            </div>
            <div class="w-full bg-gray-100 rounded-full h-2.5">
              <div class="bg-gradient-to-r from-indigo-600 to-purple-600 h-2.5 rounded-full" style="width: 85%">
              </div>
            </div>
          </div>
          <!-- Profile Stats -->
          <div class="space-y-4 mb-8 border-b border-gray-100 pb-8">
            <div class="flex justify-between items-center p-3 bg-gray-50 rounded-lg">
              <span class="text-gray-600">
                Applications
              </span>
              <span class="font-semibold text-indigo-600">
                12
              </span>
            </div>
            <div class="flex justify-between items-center p-3 bg-gray-50 rounded-lg">
              <span class="text-gray-600">
                Profile Views
              </span>
              <span class="font-semibold text-indigo-600">
                156
              </span>
            </div>
            <div class="flex justify-between items-center p-3 bg-gray-50 rounded-lg">
              <span class="text-gray-600">
                Job Matches
              </span>
              <span class="font-semibold text-indigo-600">
                24
              </span>
            </div>
            <div class="flex justify-between items-center p-3 bg-gray-50 rounded-lg">
              <span class="text-gray-600">
                Saved Jobs
              </span>
              <span class="font-semibold text-indigo-600">
                8
              </span>
            </div>
          </div>
          <!-- Quick Links -->
          <div class="space-y-2">
            <button class="w-full text-left px-4 py-3 rounded-lg hover:bg-gray-50 text-gray-700 flex items-center group transition-colors">
              <svg class="h-5 w-5 mr-3 text-gray-400 group-hover:text-indigo-600" fill="none" stroke="currentColor" viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                <path d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" stroke-linecap="round" stroke-linejoin="round" stroke-width="2">
                </path>
              </svg>
              <span class="group-hover:text-indigo-600">
                Edit Profile
              </span>
            </button>
            <button class="w-full text-left px-4 py-3 rounded-lg hover:bg-gray-50 text-gray-700 flex items-center group transition-colors">
              <svg class="h-5 w-5 mr-3 text-gray-400 group-hover:text-indigo-600" fill="none" stroke="currentColor" viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                <path d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" stroke-linecap="round" stroke-linejoin="round" stroke-width="2">
                </path>
              </svg>
              <span class="group-hover:text-indigo-600">
                My Applications
              </span>
            </button>
            <button class="w-full text-left px-4 py-3 rounded-lg hover:bg-gray-50 text-gray-700 flex items-center group transition-colors">
              <svg class="h-5 w-5 mr-3 text-gray-400 group-hover:text-indigo-600" fill="none" stroke="currentColor" viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                <path d="M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z" stroke-linecap="round" stroke-linejoin="round" stroke-width="2">
                </path>
              </svg>
              <span class="group-hover:text-indigo-600">
                Saved Jobs
              </span>
            </button>
          </div>
        </div>
      </div>
      <!-- Main Content -->
      <div class="lg:w-3/4 space-y-8">
        <!-- Job Overview -->
        <div class="section-card p-8">
          <div class="flex items-start gap-6">
            <div class="w-20 h-20 bg-gradient-to-br from-indigo-600 to-purple-600 rounded-xl flex items-center justify-center flex-shrink-0">
              <img src="https://loremflickr.com/200/200?random=1" alt="<%= job.company_name %>" class="w-100 object-contain rounded text-2xl font-bold text-white">
            </div>
            <div>
              <h1 class="text-2xl font-bold text-gray-900 mb-2">
                <%= job.title %>
              </h1>
              <p class="text-gray-600 mb-4">
                <%= job.company_name %> â€¢ <%= job.location %>
              </p>
              <div class="flex flex-wrap gap-2">
                <span class="bg-indigo-50 text-indigo-700 text-sm px-4 py-1.5 rounded font-medium">
                  <%= job.type %>
                </span>
                <% const categories = job.categories === null ? [] : job.categories.split(', '); %>
                <% categories.forEach(function(category) { %>
                <span class="bg-purple-50 text-gray-700 text-sm px-4 py-1.5 rounded font-medium">
                  <%= category %>
                </span>
                <% }); %>
              </div>
            </div>
          </div>
        </div>
        <!-- Profile Match -->
        <div class="section-card p-8 hidden">
          <h2 class="text-xl font-semibold text-gray-900 mb-6">
            Profile Match
          </h2>
          <div class="flex items-center gap-6 p-6 bg-gradient-to-br from-indigo-50 to-purple-50 rounded-xl mb-8">
            <div class="w-24 h-24 rounded-full bg-gradient-to-br from-indigo-600 to-purple-600 flex items-center justify-center">
              <span class="text-3xl font-bold text-white">
                85%
              </span>
            </div>
            <div>
              <h3 class="text-lg font-semibold text-gray-900 mb-2">
                Strong Match
              </h3>
              <p class="text-gray-600">
                Your profile matches 85% of the job requirements
              </p>
            </div>
          </div>
          <div class="space-y-6">
            <div>
              <div class="flex justify-between text-sm mb-2">
                <span class="text-gray-600 font-medium">
                  Required Skills
                </span>
                <span class="text-indigo-600 font-semibold">
                  90%
                </span>
              </div>
              <div class="w-full bg-gray-100 rounded-full h-2.5">
                <div class="bg-gradient-to-r from-indigo-600 to-purple-600 h-2.5 rounded-full" style="width: 90%">
                </div>
              </div>
            </div>
            <!-- More skill matches... -->
          </div>
        </div>
        <!-- Application Form -->
        <div class="section-card p-8">
          <div class="flex justify-between items-center mb-8">
            <h2 class="text-xl font-semibold text-gray-900">
              Application Form
            </h2>
            <button class="text-indigo-600 hover:text-indigo-700 font-medium flex items-center gap-2">
              <svg class="h-5 w-5" fill="none" stroke="currentColor" viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                <path d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z" stroke-linecap="round" stroke-linejoin="round" stroke-width="2">
                </path>
              </svg>
              Edit Profile
            </button>
          </div>
          <form id="apply-form" action="/jobs/<%= job.id %>/apply" class="space-y-8" method="POST">
            <!-- Personal Information -->
            <div class="space-y-6">
              <h3 class="text-lg font-medium text-gray-900">
                Personal Information
              </h3>
              <div class="grid md:grid-cols-2 gap-6">
                <div class="space-y-2">
                  <label class="text-sm font-medium text-gray-700">
                    Full Name
                  </label>
                  <input name="name" class="w-full px-4 py-2.5 rounded-lg border border-gray-200 focus:ring-2 focus:ring-indigo-500 focus:border-transparent" type="text" value="<%= `${user.first_name} ${user.last_name}` %>">
                  </input>
                </div>
                <div class="space-y-2">
                  <label class="text-sm font-medium text-gray-700">
                    Email
                  </label>
                  <input name="email" class="w-full px-4 py-2.5 rounded-lg border border-gray-200 focus:ring-2 focus:ring-indigo-500 focus:border-transparent" type="email" value="<%= user.email %>">
                  </input>
                </div>
                <div class="space-y-2">
                  <label class="text-sm font-medium text-gray-700">
                    Phone
                  </label>
                  <input name="phone" class="w-full px-4 py-2.5 rounded-lg border border-gray-200 focus:ring-2 focus:ring-indigo-500 focus:border-transparent" type="tel" value="<%= user.phone %>">
                  </input>
                </div>
                <div class="space-y-2">
                  <label class="text-sm font-medium text-gray-700">
                    Location
                  </label>
                  <input name="location" class="w-full px-4 py-2.5 rounded-lg border border-gray-200 focus:ring-2 focus:ring-indigo-500 focus:border-transparent" value="<%= user.city %>, <%= user.region %>" type="text">
                  </input>
                </div>
              </div>
            </div>
            <!-- Professional Information -->
            <div class="space-y-6">
              <h3 class="text-lg font-medium text-gray-900">
                Professional Information
              </h3>
              <div class="grid md:grid-cols-2 gap-6">
                <div class="space-y-2">
                  <label class="text-sm font-medium text-gray-700">
                    Current Job Title
                  </label>
                  <input class="w-full px-4 py-2.5 rounded-lg border border-gray-200 focus:ring-2 focus:ring-indigo-500 focus:border-transparent" placeholder="e.g. Senior Developer" type="text">
                  </input>
                </div>
                <div class="space-y-2">
                  <label class="text-sm font-medium text-gray-700">
                    Experience (Years)
                  </label>
                  <input class="w-full px-4 py-2.5 rounded-lg border border-gray-200 focus:ring-2 focus:ring-indigo-500 focus:border-transparent" type="number" value="5">
                  </input>
                </div>
                <div class="space-y-2">
                  <label class="text-sm font-medium text-gray-700">
                    Expected Salary
                  </label>
                  <input class="w-full px-4 py-2.5 rounded-lg border border-gray-200 focus:ring-2 focus:ring-indigo-500 focus:border-transparent" placeholder="e.g. $80,000 - $100,000" type="text">
                  </input>
                </div>
                <div class="space-y-2">
                  <label class="text-sm font-medium text-gray-700">
                    Notice Period
                  </label>
                  <select class="w-full px-4 py-2.5 rounded-lg border border-gray-200 focus:ring-2 focus:ring-indigo-500 focus:border-transparent">
                    <option>
                      Immediate
                    </option>
                    <option>
                      2 weeks
                    </option>
                    <option>
                      1 month
                    </option>
                    <option>
                      2 months
                    </option>
                    <option>
                      3 months
                    </option>
                  </select>
                </div>
              </div>
            </div>
            <!-- Skills & Expertise -->
            <div class="space-y-6">
              <h3 class="text-lg font-medium text-gray-900">
                Skills & Expertise
              </h3>
              <div class="space-y-6">
                <div class="space-y-2">
                  <label class="text-sm font-medium text-gray-700">
                    Key Skills
                  </label>
                  <input class="w-full px-4 py-2.5 rounded-lg border border-gray-200 focus:ring-2 focus:ring-indigo-500 focus:border-transparent" placeholder="e.g. JavaScript, React, Node.js" type="text">
                  <p class="text-sm text-gray-500">
                    Separate skills with commas
                  </p>
                  </input>
                </div>
                <div class="space-y-2">
                  <label class="text-sm font-medium text-gray-700">
                    Languages
                  </label>
                  <input class="w-full px-4 py-2.5 rounded-lg border border-gray-200 focus:ring-2 focus:ring-indigo-500 focus:border-transparent" placeholder="e.g. English (Native), Spanish (Intermediate)" type="text">
                  </input>
                </div>
              </div>
            </div>
            <!-- Resume Section -->
            <div class="space-y-4">
              <div class="flex justify-between items-center">
                <h3 class="text-lg font-medium text-gray-900">
                  Resume
                </h3>
                <button id="generate-cv-ai" class="text-indigo-600 hover:text-indigo-700 font-medium flex items-center gap-2" type="button">
                  <svg class="h-5 w-5" fill="none" stroke="currentColor" viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" stroke-linecap="round" stroke-linejoin="round" stroke-width="2">
                    </path>
                  </svg>
                  Generate with AI
                </button>
              </div>
              <div class="border-2 border-dashed border-gray-200 rounded-lg p-6 text-center" id="dropzone">
                <input accept=".pdf,.doc,.docx" class="hidden" id="resume" name="resume" required="" type="file">
                <div class="space-y-2">
                  <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12" stroke-linecap="round" stroke-linejoin="round" stroke-width="2">
                    </path>
                  </svg>
                  <div class="text-sm text-gray-600">
                    <label class="relative cursor-pointer text-emerald-600 hover:text-emerald-700" for="resume">
                      <span>
                        Upload a file
                      </span>
                    </label>
                    <p class="pl-1">
                      or drag and drop
                    </p>
                  </div>
                  <p class="text-xs text-gray-500">
                    PDF, DOC, DOCX up to 10MB
                  </p>
                </div>
                </input>
              </div>
              <div class="hidden cursor-pointer" id="file-preview">
                <div class="flex items-center p-4 bg-gray-50 rounded-lg">
                  <svg class="h-6 w-6 text-gray-400 mr-2" fill="none" stroke="currentColor" viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" stroke-linecap="round" stroke-linejoin="round" stroke-width="2">
                    </path>
                  </svg>
                  <span class="text-sm text-gray-600" id="file-name">
                  </span>
                  <button class="ml-auto text-gray-400 hover:text-gray-600" id="remove-file" type="button">
                    <svg class="h-5 w-5" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                      <path clip-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" fill-rule="evenodd">
                      </path>
                    </svg>
                  </button>
                </div>
              </div>
            </div>
            <!-- Additional Information -->
            <div class="space-y-6">
              <h3 class="text-lg font-medium text-gray-900">
                Additional Information
              </h3>
              <div class="space-y-6">
                <div class="space-y-2">
                  <label class="text-sm font-medium text-gray-700">
                    Portfolio/Website
                  </label>
                  <input class="w-full px-4 py-2.5 rounded-lg border border-gray-200 focus:ring-2 focus:ring-indigo-500 focus:border-transparent" placeholder="https://" type="url">
                  </input>
                </div>
                <div class="space-y-2">
                  <label class="text-sm font-medium text-gray-700">
                    LinkedIn Profile
                  </label>
                  <input class="w-full px-4 py-2.5 rounded-lg border border-gray-200 focus:ring-2 focus:ring-indigo-500 focus:border-transparent" placeholder="https://linkedin.com/in/" type="url">
                  </input>
                </div>
                <div class="space-y-2">
                  <div class="flex items-center justify-between">
                    <label class="text-sm font-medium text-gray-700">
                      Cover Letter
                    </label>
                    <button id="generate-cover-letter" class="text-indigo-600 hover:text-indigo-700 font-medium flex items-center gap-2" type="button" id="generate-ai">
                      <svg class="h-5 w-5" fill="none" stroke="currentColor" viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" stroke-linecap="round" stroke-linejoin="round" stroke-width="2">
                        </path>
                      </svg>
                      Generate with AI
                    </button>
                    </div>
                  <!-- <textarea id="cover-letter" label class="w-full px-4 py-2.5 rounded-lg border border-gray-200 focus:ring-2 focus:ring-indigo-500 focus:border-transparent" placeholder="Tell us why you're perfect for this role..." rows="12"> -->
                                        <!-- </textarea> -->
                  <sl-textarea id="cover-letter" placeholder="Type/paste your cover letter here..."></sl-textarea>

                </div>
                
              </div>
            </div>
            <!-- Submit Button -->
            <button class="w-full bg-gradient-to-r from-indigo-600 to-purple-600 text-white px-8 py-4 rounded-xl font-semibold hover:from-indigo-700 hover:to-purple-700 transition-colors shadow-lg" type="submit">
              Submit Application
            </button>
          </form>
        </div>
      </div>
    </div>
  </div>
  
  <%- include('partials/footer') %>
  <script src="https://unpkg.com/docx@8.3.0/build/index.umd.js"></script>
  <script>
  document.addEventListener('DOMContentLoaded', function() {
    let blobObject
    // ai function
    async function aks(aks, input) {
      try {

        const wubshet = {
            name: "Wubshet Adane",
            age: 69,
            positionName: "Software Engineer",
            location: "Addis Ababa, Ethiopia",
            occupation: "Software Engineer",
            hobbies: ["Reading", "Traveling", "Cooking"],
            skills: ["JavaScript", "Python", "React", "Node.js"],
        }
    
        
        const response = await fetch("https://openrouter.ai/api/v1/chat/completions", {
          method: "POST",
          headers: {
            "Authorization": "Bearer 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",
    
            "Content-Type": "application/json"
          },
          body: JSON.stringify({
            "model": "openai/gpt-3.5-turbo-0613",
            "messages": [{
              "role": "user",
              "content": [{
                "type": "text",
                "text": `${aks} - data = ${JSON.stringify(input)}`
              }]
            }]
          })
        });
    
        const data = await response.json();
        if(data) {
          console.log(data);
          return data.choices[0].message.content;
        }
      } catch(e) {
        alert("try again");
        console.log(e)
      }
    }
    
    const resume = document.getElementById("resume");
  
    // Generate Resume
    document.getElementById("generate-cv-ai").addEventListener("click", async function() {
      console.log("requesting...");
      fileName.textContent = "Generating...";
      filePreview.classList.remove('hidden');
      dropzone.classList.add('hidden');
      const formData = document.getElementById("apply-form");
      
      const theFormData = new FormData(formData);
      const formDataObject = {};
        theFormData.forEach((value, key) => {
          formDataObject[key] = value;
        })

      const { Document, Packer, Paragraph } = window.docx;
      const text = await aks("generate a modern resume based on this data.", formDataObject);
      const lines = text.trim().split('\n');
      console.log(lines);
      const children = lines.map(line => new Paragraph(line.trim()))
      const doc = new Document({
        sections: [{
           children 
        }],
      });

      const blob = await Packer.toBlob(doc);
      blobObject = blob
      const file = new File([blob], "resume.docx", { type: "application/vnd.openxmlformats-officedocument.wordprocessingml.document" });
  
      const dataTransfer = new DataTransfer();
      dataTransfer.items.add(file);
      document.getElementById("resume").files = dataTransfer.files;  
  
      const newFile = document.getElementById("resume").files[0];
      if (newFile) {
        showFilePreview(newFile);
        console.log(newFile);
        
      }
    });
  
    resume.addEventListener("change", function() {
      const file = resume.files[0];
      if (file) {
        console.log(file);
      }
    });
    

    
 
 async function downloadBlob(blob, filename) {
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = filename;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  }
    document.getElementById("generate-cover-letter").addEventListener("click", function() {
      console.log("requesting...");
      document.getElementById("cover-letter").placeholder = "Generating your cover letter...";
      document.getElementById("cover-letter").classList.add("text-gray-400"); 
      
      const formData = document.getElementById("apply-form");
      
      const theFormData = new FormData(formData);
      const formDataObject = {};
        theFormData.forEach((value, key) => {
          formDataObject[key] = value;
        })
          console.log(formDataObject);
          aks("Generate a simple cover letter usig this data to apply for job. fill the credentials like [your name], age and more using this data", formDataObject)
            .then(data => {
              console.log(data);
              document.getElementById("cover-letter").value = data;
              document.getElementById("cover-letter").classList.remove("text-gray-400"); 
  
              // Process the data as needed
            })
            .catch(error => {
              console.error('Error:', error);
            });
        });
 
    // Resume upload functionality
    const dropzone = document.getElementById('dropzone');
    const resumeInput = document.getElementById('resume');
    const filePreview = document.getElementById('file-preview');
    const fileName = document.getElementById('file-name');
    const removeFileBtn = document.getElementById('remove-file');
    
    // Preview functionality
    const previewButton = document.getElementById('preview-button');
    const previewModal = document.getElementById('preview-modal');
    const closePreview = document.getElementById('close-preview');
    const editApplication = document.getElementById('edit-application');
    const submitFinal = document.getElementById('submit-final');
    const previewContent = document.getElementById('preview-content');
    const form = document.querySelector('form');
    
    // Handle file selection
    resumeInput.addEventListener('change', function(e) {
      if (this.files && this.files[0]) {
        showFilePreview(this.files[0]);
      }
    });

    
    
    // Handle drag and drop
    dropzone.addEventListener('dragover', function(e) {
      e.preventDefault();
      dropzone.classList.add('border-indigo-500');
    });
    
    dropzone.addEventListener('dragleave', function() {
      dropzone.classList.remove('border-indigo-500');
    });
    
    dropzone.addEventListener('drop', function(e) {
      e.preventDefault();
      dropzone.classList.remove('border-indigo-500');
      
      if (e.dataTransfer.files && e.dataTransfer.files[0]) {
        resumeInput.files = e.dataTransfer.files;
        showFilePreview(e.dataTransfer.files[0]);
      }
    });
    
    // Remove file
    removeFileBtn.addEventListener('click', function() {
      resumeInput.value = '';
      filePreview.classList.add('hidden');
      dropzone.classList.remove('hidden');
    });
    
    // Show file preview
    function showFilePreview(file) {
      fileName.textContent = file.name;
      filePreview.classList.remove('hidden');
      dropzone.classList.add('hidden');
    }

    filePreview.addEventListener("click", function(e) {
      console.log(e.target);
        if (e.target.id !== 'remove-file') {
          downloadBlob(blobObject, "resume.docx");
        }

    })

    
    
    
  });
</script>
</body>


</html>